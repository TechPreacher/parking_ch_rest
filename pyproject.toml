[project]
name = "parkings-ch-api"
version = "0.1.0"
description = "FastAPI application with Streamlit frontend for Swiss parking information"
authors = [{ name = "Sascha Corti", email = "sascha@corti.com" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.2.1,<3.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "aiohttp (>=3.11.18,<4.0.0)",
    "lxml (>=5.4.0,<6.0.0)",
    "streamlit (>=1.35.0,<1.36.0)",
    "folium (>=0.15.1,<0.16.0)",
    "streamlit-folium (>=0.18.0,<0.19.0)",
    "plotly (>=5.21.0,<5.22.0)",
    "pandas (>=2.2.1,<2.3.0)",
    "selenium (>=4.32.0,<5.0.0)",
    "webdriver-manager (>=4.0.2,<5.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
ruff = "^0.11.8"
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
pytest-cov = "^6.1.1"

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "BLE", # flake8-blind-except
    "B",   # flake8-bugbear
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "COM", # flake8-commas
    "EM",  # flake8-errmsg
    "PL",  # pylint
    "PIE", # flake8-pie
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "RUF", # ruff-specific rules
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D104",   # Missing docstring in public package
]

[tool.ruff.per-file-ignores]
"tests/*" = ["ANN", "D", "S"]
"__init__.py" = ["F401"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
